#!/usr/bin/env python
import matplotlib.pyplot as plt
import xarray as xr
import numpy as np


def calc_diff(arr1, arr2):
  diff = arr1 - np.flip(arr2, axis=1)
  return diff


def comp_1(ds_A, ds_B, var, tstep=0):
  '''
  Trying to compare Helene's downscaled file to the one generated by the 
  refactored process (this codebase).

  So far tair and vapor_press look decent, but nirr and precip are off by quite
  a bit.
  '''
  VAR = var
  TSTEP = tstep

  diff = calc_diff(ds_A[VAR].data, ds_B[VAR].data)

  diff_min = np.abs(np.nanmin(diff.flatten()))
  diff_max = np.abs(np.nanmax(diff.flatten()))

  limit = max(diff_min, diff_max)
  print(f"max abs diff = {limit}")


  fig, axes = plt.subplots(1,3, figsize=(12,6))

  ds_A_max = np.nanmax(ds_A[VAR][TSTEP].data)
  ds_A_min = np.nanmin(ds_A[VAR][TSTEP].data)
  ds_B_max = np.nanmax(ds_B[VAR][TSTEP].data)
  ds_B_min = np.nanmin(ds_B[VAR][TSTEP].data)

  print(f"A {VAR} min={ds_A_min}, max={ds_A_max}")
  print(f"B {VAR} min={ds_B_min}, max={ds_B_max}")

  cbar_min = min(ds_A_min, ds_B_min)
  cbar_max = max(ds_A_max, ds_B_max)
  print(f"cbar min={cbar_min}, max={cbar_max}")

  # This section indicates that we need to flip the Helene data vertically.
  # rtim = axes[0,0].imshow(rt[VAR][TSTEP].data, origin='lower')
  # hgim = axes[0,1].imshow(hg[VAR][TSTEP].data, origin='lower')
  # diff = axes[0,2].imshow( (rt[VAR][TSTEP].data - hg[VAR][TSTEP].data), origin='lower')
  # plt.colorbar(rtim, ax=axes[0,0])
  # plt.colorbar(hgim, ax=axes[0,1])
  # plt.colorbar(diff, ax=axes[0,2])

  # This is the flipped comparison...
  flipped_hg = np.flip(ds_B[VAR][TSTEP].data, axis=0)
  rtim = axes[0].imshow(ds_A[VAR][TSTEP].data, origin='lower', vmin=cbar_min, vmax=cbar_max)
  hgim = axes[1].imshow(flipped_hg, origin='lower', vmin=cbar_min, vmax=cbar_max)
  diff = axes[2].imshow( diff[TSTEP], origin='lower', cmap='coolwarm', vmin=-limit, vmax=limit)
  #diff = axes[0,2].imshow( (rt[VAR][TSTEP].data - flipped_hg), origin='lower')


  axes[0].set_title('Refactored TEMDS')
  axes[1].set_title("Helene's downscaling")
  axes[2].set_title('Difference (ref - helene)')

  plt.colorbar(rtim, ax=axes[0])
  plt.colorbar(hgim, ax=axes[1])
  plt.colorbar(diff, ax=axes[2])

  plt.suptitle(f'Comparison of {VAR} at time step {TSTEP}')
  plt.tight_layout

  plt.show()

def comp_2(ds_A, ds_B, var):
  #ds_A = xr.open_dataset("working/05-tiles-TEM/H00_V08/historic-climate.nc")
  #hg = xr.open_dataset("hg-samples/H01_V09/input/historic-climate.nc")

  VAR = var

  fig, axes = plt.subplots(2,1, figsize=(12,6))

  diff = calc_diff(ds_A[VAR].data, ds_B[VAR].data)

  diffbox = axes[0].boxplot(diff.flatten(), whis=[5, 95], showfliers=True)

  ts_diff_min = np.nanmin(diff, axis=(1,2))
  ts_diff_max = np.nanmax(diff, axis=(1,2))

  diffts_min = axes[1].plot(ts_diff_min, label='min')
  diffts_max = axes[1].plot(ts_diff_max, label='max')






if __name__ == "__main__":

  dataset_A = xr.open_dataset("working/05-tiles-TEM/H00_V08/historic-climate.nc")
  dataset_B = xr.open_dataset("hg-samples/H01_V09/input/historic-climate.nc")


  comp_1(dataset_A, dataset_B, 'tair', tstep=0)
  comp_1(dataset_A, dataset_B, 'pre', tstep=0)
  comp_1(dataset_A, dataset_B, 'vapor_press', tstep=0)
  comp_1(dataset_A, dataset_B, 'nirr', tstep=0)

  comp_2(dataset_A, dataset_B, 'tair')
  comp_2(dataset_A, dataset_B, 'pre')
  comp_2(dataset_A, dataset_B, 'vapor_press')
  comp_2(dataset_A, dataset_B, 'nirr')    